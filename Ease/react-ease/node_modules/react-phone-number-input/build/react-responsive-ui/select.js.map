{"version":3,"sources":["../../source/react-responsive-ui/select.js"],"names":["Empty_value_option_value","value_prop_type","oneOfType","string","number","bool","Select","props","options","value","autocomplete","children","menu","toggler","onChange","Error","state","matching_options","get_matching_options","Children","forEach","element","label","fallback","nativeExpanded","document","addEventListener","document_clicked","setState","javascript","resize_native_expanded_select","window","previous_props","previous_state","expanded","height","should_animate","undefined","calculate_height","removeEventListener","toggle_timeout","clearTimeout","scroll_into_view_timeout","restore_focus_on_collapse_timeout","id","upward","scroll","alignment","saveOnIcons","native","disabled","required","placeholder","error","style","className","list_height","get_options","list_style","is_scrollable","maxHeight","overflow","overflown","list_items","map","index","icon","render_list_item","wrapper_style","textAlign","selected","get_selected_option","markup","select","ref","on_key_down_in_container","on_blur","render_selected_item","value_is_empty","should_indicate_invalid","render_toggler","length","list","render_static","scrollbarPadding","focused_option_value","is_focused","item_style","marginRight","button","extra_props","onClick","event","toggle","item_clicked","cloneElement","get_option_key","type","Separator","render_selected_item_only","native_expanded_select_container_style","concise","tabIndex","onFocus","title","inputClassName","autocomplete_width","autocomplete_input_value","selected_label","get_selected_option_label","selected_text","selected_style_classes","on_autocomplete_input_change","on_key_down","onKeyDown","name","native_select_on_change","render_native_select_options","child","empty_option_is_selected","empty_option_present","rendered_options","option","unshift","indicateInvalid","get_option","filter","x","indexOf","option_index","maxItems","vertical_padding","focus","autocompleteShowAll","slice","i","option_element","findDOMNode","offset_top","offsetTop","is_first_option","firstChild","scrollTop","gravity","is_last_option","lastChild","top_line","bottom_line","offsetHeight","list_dom_node","border","parseInt","getComputedStyle","borderTopWidth","scrollHeight","paddingTop","scrollable_list_height","toLowerCase","verbose","propTypes","arrayOf","shape","node","isRequired","func","onBlur","object","oneOf","focusUponSelection","scrollIntoView","expandAnimationDuration","onTabOut","onToggle","defaultProps","target","width","offsetWidth","toggle_options","preventDefault","setTimeout","is_now_expanded","dont_focus_after_toggle","is_still_expanded","scrollIntoViewIfNeeded","duration","scroll_to","callback","selected_option","options_list","contains","ctrlKey","altKey","shiftKey","metaKey","keyCode","previous","previous_focusable_option","show_option","next","next_focusable_option","relatedTarget","currentTarget","_event","stopPropagation","input","display"],"mappings":"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","file":"select.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport classNames from 'classnames'\nimport scrollIntoViewIfNeeded from 'scroll-into-view-if-needed'\n\nimport { submit_parent_form, get_scrollbar_width } from './misc/dom'\n\n// Possible enhancements:\n//\n//  * If the menu is close to a screen edge,\n//    automatically reposition it so that it fits on the screen\n//  * Maybe show menu immediately above the toggler\n//    (like in Material design), not below it.\n//\n// https://material.google.com/components/menus.html\n\nconst Empty_value_option_value = ''\n\nconst value_prop_type = PropTypes.oneOfType\n([\n\tPropTypes.string,\n\tPropTypes.number,\n\tPropTypes.bool\n])\n\nexport default class Select extends PureComponent\n{\n\tstatic propTypes =\n\t{\n\t\t// A list of selectable options\n\t\toptions    : PropTypes.arrayOf\n\t\t(\n\t\t\tPropTypes.shape\n\t\t\t({\n\t\t\t\t// Option value (may be `undefined`)\n\t\t\t\tvalue : value_prop_type,\n\t\t\t\t// Option label (may be `undefined`)\n\t\t\t\tlabel : PropTypes.string,\n\t\t\t\t// Option icon\n\t\t\t\ticon  : PropTypes.node\n\t\t\t})\n\t\t),\n\n\t\t// HTML form input `name` attribute\n\t\tname       : PropTypes.string,\n\n\t\t// Label which is placed above the select\n\t\tlabel      : PropTypes.string,\n\n\t\t// Placeholder (like \"Choose\")\n\t\tplaceholder : PropTypes.string,\n\n\t\t// Whether to use native `<select/>`\n\t\tnative      : PropTypes.bool.isRequired,\n\n\t\t// Whether to use native `<select/>` when expanded\n\t\tnativeExpanded : PropTypes.bool.isRequired,\n\n\t\t// Show icon only for selected item,\n\t\t// and only if `concise` is `true`.\n\t\tsaveOnIcons : PropTypes.bool,\n\n\t\t// Disables this control\n\t\tdisabled   : PropTypes.bool,\n\n\t\t// Set to `true` to mark the field as required\n\t\trequired   : PropTypes.bool.isRequired,\n\n\t\t// Selected option value\n\t\tvalue      : value_prop_type,\n\n\t\t// Is called when an option is selected\n\t\tonChange   : PropTypes.func,\n\n\t\t// Is called when the select is focused\n\t\tonFocus    : PropTypes.func,\n\n\t\t// Is called when the select is blurred.\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\n\t\t// so that it gets the parsed `value` in its `onBlur` handler,\n\t\t// not the formatted text.\n\t\tonBlur     : PropTypes.func,\n\n\t\t// (exotic use case)\n\t\t// Falls back to a plain HTML input\n\t\t// when javascript is disabled (e.g. Tor)\n\t\tfallback   : PropTypes.bool.isRequired,\n\n\t\t// Component CSS class\n\t\tclassName  : PropTypes.string,\n\n\t\t// Autocomplete `<input/>` CSS class\n\t\tinputClassName : PropTypes.string,\n\n\t\t// CSS style object\n\t\tstyle      : PropTypes.object,\n\n\t\t// If this flag is set to `true`,\n\t\t// and `icon` is specified for a selected option,\n\t\t// then the selected option will be displayed\n\t\t// as icon only, without the label.\n\t\tconcise    : PropTypes.bool,\n\n\t\t// HTML `tabindex` attribute\n\t\ttabIndex   : PropTypes.number,\n\n\t\t// If set to `true`, autocompletion is available\n\t\t// upon expanding the options list.\n\t\tautocomplete : PropTypes.bool,\n\n\t\t// If set to `true`, autocomple will show all\n\t\t// matching options instead of just `maxItems`.\n\t\tautocompleteShowAll : PropTypes.bool,\n\n\t\t// Options list alignment (\"left\", \"right\")\n\t\talignment  : PropTypes.oneOf(['left', 'right']),\n\n\t\t// If `menu` flag is set to `true`\n\t\t// then it's gonna be a dropdown menu\n\t\t// with `children` elements inside\n\t\t// and therefore `onChange` won't be called\n\t\t// on menu item click.\n\t\tmenu       : PropTypes.bool,\n\n\t\t// If `menu` flag is set to `true`\n\t\t// then `toggler` is the dropdown menu button.\n\t\ttoggler    : PropTypes.element,\n\n\t\t// If `scroll` is `false`, then options list\n\t\t// is not limited in height.\n\t\t// Is `true` by default (scrollable).\n\t\tscroll     : PropTypes.bool.isRequired,\n\n\t\t// If this flag is set to `true`,\n\t\t// then the dropdown expands itself upward.\n\t\t// (as opposed to the default downward)\n\t\tupward     : PropTypes.bool,\n\n\t\t// Maximum items fitting the options list height (scrollable).\n\t\t// In case of `autocomplete` that's the maximum number of matched items shown.\n\t\t// Is `6` by default.\n\t\tmaxItems   : PropTypes.number.isRequired,\n\n\t\t// Is `true` by default (only when the list of options is scrollable)\n\t\tscrollbarPadding : PropTypes.bool,\n\n\t\tfocusUponSelection : PropTypes.bool.isRequired,\n\n\t\t// When the `<Select/>` is expanded\n\t\t// the options list may not fit on the screen.\n\t\t// If `scrollIntoView` is `true` (which is the default)\n\t\t// then the browser will automatically scroll\n\t\t// so that the expanded options list fits on the screen.\n\t\tscrollIntoView : PropTypes.bool.isRequired,\n\n\t\t// If `scrollIntoView` is `true` (which is the default)\n\t\t// then this is gonna be the delay after which it scrolls into view.\n\t\texpandAnimationDuration : PropTypes.number.isRequired,\n\n\t\tonTabOut : PropTypes.func,\n\n\t\tonToggle : PropTypes.func\n\n\t\t// transition_item_count_min : PropTypes.number,\n\t\t// transition_duration_min : PropTypes.number,\n\t\t// transition_duration_max : PropTypes.number\n\t}\n\n\tstatic defaultProps =\n\t{\n\t\talignment          : 'left',\n\t\tscroll             : true,\n\t\tmaxItems           : 6,\n\t\tscrollbarPadding   : true,\n\t\tfocusUponSelection : true,\n\t\tfallback           : false,\n\t\tnative             : false,\n\t\tnativeExpanded     : false,\n\t\tscrollIntoView     : true,\n\t\texpandAnimationDuration : 150,\n\n\t\t// Set to `true` to mark the field as required\n\t\trequired : false,\n\n\t\t// transition_item_count_min : 1,\n\t\t// transition_duration_min : 60, // milliseconds\n\t\t// transition_duration_max : 100 // milliseconds\n\t}\n\n\tstate =\n\t{\n\t\t// Is initialized during the first `componentDidUpdate()` call\n\t\tvertical_padding: 0\n\t}\n\n\tconstructor(props)\n\t{\n\t\tsuper(props)\n\n\t\t// Shouldn't memory leak because\n\t\t// the set of options is assumed to be constant.\n\t\tthis.options = {}\n\n\t\tconst\n\t\t{\n\t\t\tvalue,\n\t\t\tautocomplete,\n\t\t\toptions,\n\t\t\tchildren,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\tonChange\n\t\t}\n\t\t= this.props\n\n\t\tif (autocomplete)\n\t\t{\n\t\t\tif (!options)\n\t\t\t{\n\t\t\t\tthrow new Error(`\"options\" property is required for an \"autocomplete\" select`)\n\t\t\t}\n\n\t\t\tthis.state.matching_options = this.get_matching_options(options, value)\n\t\t}\n\n\t\tif (children && !menu)\n\t\t{\n\t\t\tReact.Children.forEach(children, (element) =>\n\t\t\t{\n\t\t\t\tif (!element.props.value)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`You must specify \"value\" prop on each child of <Select/>`)\n\t\t\t\t}\n\n\t\t\t\tif (!element.props.label)\n\t\t\t\t{\n\t\t\t\t\tthrow new Error(`You must specify \"label\" prop on each child of <Select/>`)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (menu && !toggler)\n\t\t{\n\t\t\tthrow new Error(`Supply a \"toggler\" component when enabling \"menu\" in <Select/>`)\n\t\t}\n\n\t\tif (!menu && !onChange)\n\t\t{\n\t\t\tthrow new Error(`\"onChange\" property must be specified for a non-menu <Select/>`)\n\t\t}\n\t}\n\n\t// Client side rendering, javascript is enabled\n\tcomponentDidMount()\n\t{\n\t\tconst { fallback, nativeExpanded } = this.props\n\n\t\tdocument.addEventListener('click', this.document_clicked)\n\n\t\tif (fallback)\n\t\t{\n\t\t\tthis.setState({ javascript: true })\n\t\t}\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\tthis.resize_native_expanded_select()\n\t\t\twindow.addEventListener('resize', this.resize_native_expanded_select)\n\t\t}\n\t}\n\n\tcomponentDidUpdate(previous_props, previous_state)\n\t{\n\t\tconst { nativeExpanded, value } = this.props\n\t\tconst { expanded, height } = this.state\n\n\t\tif (expanded !== previous_state.expanded)\n\t\t{\n\t\t\tif (expanded && this.should_animate())\n\t\t\t{\n\t\t\t\tif (height === undefined)\n\t\t\t\t{\n\t\t\t\t\tthis.calculate_height()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the `value` changed then resize the native expanded `<select/>`\n\t\tif (nativeExpanded && value !== previous_props.value)\n\t\t{\n\t\t\tthis.resize_native_expanded_select()\n\t\t}\n\t}\n\n\tcomponentWillUnmount()\n\t{\n\t\tconst { nativeExpanded } = this.props\n\n\t\tdocument.removeEventListener('click', this.document_clicked)\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\twindow.removeEventListener('resize', this.resize_native_expanded_select)\n\t\t}\n\n\t\tif (this.toggle_timeout)\n\t\t{\n\t\t\tclearTimeout(this.toggle_timeout)\n\t\t\tthis.toggle_timeout = undefined\n\t\t}\n\n\t\tif (this.scroll_into_view_timeout)\n\t\t{\n\t\t\tclearTimeout(this.scroll_into_view_timeout)\n\t\t\tthis.scroll_into_view_timeout = undefined\n\t\t}\n\n\t\tif (this.restore_focus_on_collapse_timeout)\n\t\t{\n\t\t\tclearTimeout(this.restore_focus_on_collapse_timeout)\n\t\t\tthis.restore_focus_on_collapse_timeout = undefined\n\t\t}\n\t}\n\n\trender()\n\t{\n\t\tconst\n\t\t{\n\t\t\tid,\n\t\t\tupward,\n\t\t\tscroll,\n\t\t\tchildren,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\talignment,\n\t\t\tautocomplete,\n\t\t\tsaveOnIcons,\n\t\t\tfallback,\n\t\t\tnative,\n\t\t\tnativeExpanded,\n\t\t\tdisabled,\n\t\t\trequired,\n\t\t\tplaceholder,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\terror,\n\t\t\tstyle,\n\t\t\tclassName\n\t\t}\n\t\t= this.props\n\n\t\tconst\n\t\t{\n\t\t\texpanded,\n\t\t\tlist_height\n\t\t}\n\t\t= this.state\n\n\t\tconst options = this.get_options()\n\n\t\tlet list_style\n\n\t\t// Makes the options list scrollable (only when not in `autocomplete` mode).\n\t\tif (this.is_scrollable() && this.state.list_height !== undefined)\n\t\t{\n\t\t\tlist_style = { maxHeight: `${list_height}px` }\n\t\t}\n\n\t\tconst overflow = scroll && options && this.overflown()\n\n\t\tlet list_items\n\n\t\t// If a list of options is supplied as an array of `{ value, label }`,\n\t\t// then transform those elements to <buttons/>\n\t\tif (options)\n\t\t{\n\t\t\tlist_items = options.map(({ value, label, icon }, index) =>\n\t\t\t{\n\t\t\t\treturn this.render_list_item({ index, value, label, icon: !saveOnIcons && icon, overflow })\n\t\t\t})\n\t\t}\n\t\t// Else, if a list of options is supplied as a set of child React elements,\n\t\t// then render those elements.\n\t\telse\n\t\t{\n\t\t\tlist_items = React.Children.map(children, (element, index) =>\n\t\t\t{\n\t\t\t\tif (!element)\n\t\t\t\t{\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\treturn this.render_list_item({ index, element })\n\t\t\t})\n\t\t}\n\n\t\tconst wrapper_style = { textAlign: alignment }\n\n\t\tconst selected = this.get_selected_option()\n\n\t\tconst markup =\n\t\t(\n\t\t\t<div\n\t\t\t\tref={ ref => this.select = ref }\n\t\t\t\tonKeyDown={ this.on_key_down_in_container }\n\t\t\t\tonBlur={ this.on_blur }\n\t\t\t\tstyle={ style ? { ...wrapper_style, ...style } : wrapper_style }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__rich'              : fallback,\n\t\t\t\t\t\t'rrui__select--upward'    : upward,\n\t\t\t\t\t\t'rrui__select--expanded'  : expanded,\n\t\t\t\t\t\t'rrui__select--collapsed' : !expanded,\n\t\t\t\t\t\t'rrui__select--disabled'  : disabled\n\t\t\t\t\t},\n\t\t\t\t\tclassName\n\t\t\t\t) }>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t({\n\t\t\t\t\t\t'rrui__input': !toggler\n\t\t\t\t\t}) }>\n\n\t\t\t\t\t{/* Currently selected item */}\n\t\t\t\t\t{ !menu && !native && this.render_selected_item() }\n\n\t\t\t\t\t{/* Label */}\n\t\t\t\t\t{/* (this label is placed after the \"selected\" button\n\t\t\t\t\t     to utilize the CSS `+` selector) */}\n\t\t\t\t\t{/* If the `placeholder` wasn't specified\n\t\t\t\t\t    but `label` was and no option is currently selected\n\t\t\t\t\t    then the `label` becomes the `placeholder`\n\t\t\t\t\t    until something is selected */}\n\t\t\t\t\t{ label && (this.get_selected_option() || placeholder) &&\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\thtmlFor={ id }\n\t\t\t\t\t\t\tclassName={ classNames('rrui__input-label',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'rrui__input-label--required' : required && value_is_empty(value),\n\t\t\t\t\t\t\t\t'rrui__input-label--invalid'  : this.should_indicate_invalid()\n\t\t\t\t\t\t\t}) }>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</label>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* Menu toggler */}\n\t\t\t\t\t{ menu && this.render_toggler() }\n\n\t\t\t\t\t{/* The list of selectable options */}\n\t\t\t\t\t{/* Math.max(this.state.height, this.props.max_height) */}\n\t\t\t\t\t{ !native && !nativeExpanded && list_items.length > 0 &&\n\t\t\t\t\t\t<ul\n\t\t\t\t\t\t\tref={ ref => this.list = ref }\n\t\t\t\t\t\t\tstyle={ list_style }\n\t\t\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t'rrui__expandable',\n\t\t\t\t\t\t\t\t'rrui__expandable--overlay',\n\t\t\t\t\t\t\t\t'rrui__select__options',\n\t\t\t\t\t\t\t\t'rrui__shadow',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'rrui__select__options--menu'          : menu,\n\t\t\t\t\t\t\t\t\t'rrui__expandable--expanded'           : expanded,\n\t\t\t\t\t\t\t\t\t'rrui__select__options--expanded'      : expanded,\n\t\t\t\t\t\t\t\t\t'rrui__expandable--left-aligned'       : alignment === 'left',\n\t\t\t\t\t\t\t\t\t'rrui__expandable--right-aligned'      : alignment === 'right',\n\t\t\t\t\t\t\t\t\t'rrui__select__options--left-aligned'  : !children && alignment === 'left',\n\t\t\t\t\t\t\t\t\t'rrui__select__options--right-aligned' : !children && alignment === 'right',\n\t\t\t\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t\t\t\t'rrui__select__options--upward'        : upward,\n\t\t\t\t\t\t\t\t\t'rrui__select__options--downward'      : !upward\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t) }>\n\t\t\t\t\t\t\t{ list_items }\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t}\n\n\t\t\t\t\t{/* Fallback in case javascript is disabled */}\n\t\t\t\t\t{ (native || (fallback && !this.state.javascript)) && this.render_static() }\n\t\t\t\t</div>\n\n\t\t\t\t{/* Error message */}\n\t\t\t\t{ this.should_indicate_invalid() &&\n\t\t\t\t\t<div className=\"rrui__input-error\">{ error }</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_list_item({ index, element, value, label, icon, overflow }) // , first, last\n\t{\n\t\tconst { disabled, menu, scrollbarPadding } = this.props\n\t\tconst { focused_option_value, expanded } = this.state\n\n\t\t// If a list of options is supplied as a set of child React elements,\n\t\t// then extract values from their props.\n\t\tif (element)\n\t\t{\n\t\t\tvalue = element.props.value\n\t\t}\n\n\t\tconst is_focused = !menu && value === focused_option_value\n\n\t\tlet item_style\n\n\t\t// on overflow the vertical scrollbar will take up space\n\t\t// reducing padding-right and the only way to fix that\n\t\t// is to add additional padding-right\n\t\t//\n\t\t// a hack to restore padding-right taken up by a vertical scrollbar\n\t\tif (overflow && scrollbarPadding)\n\t\t{\n\t\t\titem_style = { marginRight: get_scrollbar_width() + 'px' }\n\t\t}\n\n\t\tlet button\n\n\t\t// If a list of options is supplied as a set of child React elements,\n\t\t// then enhance those elements with extra props.\n\t\tif (element)\n\t\t{\n\t\t\tconst extra_props =\n\t\t\t{\n\t\t\t\tstyle     : item_style ? { ...item_style, ...element.props.style } : element.props.style,\n\t\t\t\tclassName : classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__option',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused\n\t\t\t\t\t},\n\t\t\t\t\telement.props.className\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tconst onClick = element.props.onClick\n\n\t\t\textra_props.onClick = (event) =>\n\t\t\t{\n\t\t\t\tif (menu)\n\t\t\t\t{\n\t\t\t\t\tthis.toggle()\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.item_clicked(value, event)\n\t\t\t\t}\n\n\t\t\t\tif (onClick)\n\t\t\t\t{\n\t\t\t\t\tonClick(event)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbutton = React.cloneElement(element, extra_props)\n\t\t}\n\t\t// Else, if a list of options is supplied as an array of `{ value, label }`,\n\t\t// then transform those options to <buttons/>\n\t\telse\n\t\t{\n\t\t\tbutton = <button\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={ event => this.item_clicked(value, event) }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\ttabIndex=\"-1\"\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__select__option',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__option--focused' : is_focused,\n\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t'rrui__select__option--disabled' : disabled\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t\tstyle={ item_style }>\n\t\t\t\t{ icon && React.cloneElement(icon, { className: classNames(icon.props.className, 'rrui__select__option-icon') }) }\n\t\t\t\t{ label }\n\t\t\t</button>\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<li\n\t\t\t\tkey={ get_option_key(value) }\n\t\t\t\tref={ ref => this.options[get_option_key(value)] = ref }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\t'rrui__expandable__content',\n\t\t\t\t\t'rrui__select__options-list-item',\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__select__separator-option' : element && element.type === Select.Separator,\n\t\t\t\t\t\t'rrui__expandable__content--expanded' : expanded,\n\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t'rrui__select__options-list-item--expanded' : expanded\n\t\t\t\t\t}\n\t\t\t\t) }>\n\t\t\t\t{ button }\n\t\t\t</li>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\t// Renders the selected option\n\t// and possibly a transparent native `<select/>` above it\n\t// so that the native `<select/>` expands upon click\n\t// on the selected option\n\t// (in case of `nativeExpanded` setting).\n\trender_selected_item()\n\t{\n\t\tconst { nativeExpanded, toggler } = this.props\n\n\t\tif (toggler)\n\t\t{\n\t\t\treturn this.render_toggler()\n\t\t}\n\n\t\tconst selected = this.render_selected_item_only()\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\treturn (\n\t\t\t\t<div style={ native_expanded_select_container_style }>\n\t\t\t\t\t{ this.render_static() }\n\t\t\t\t\t{ selected }\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn selected\n\t}\n\n\trender_selected_item_only()\n\t{\n\t\tconst\n\t\t{\n\t\t\tchildren,\n\t\t\tvalue,\n\t\t\tplaceholder,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\tautocomplete,\n\t\t\tconcise,\n\t\t\tnativeExpanded,\n\t\t\ttabIndex,\n\t\t\tonFocus,\n\t\t\ttitle,\n\t\t\tinputClassName\n\t\t}\n\t\t= this.props\n\n\t\tconst\n\t\t{\n\t\t\texpanded,\n\t\t\tautocomplete_width,\n\t\t\tautocomplete_input_value\n\t\t}\n\t\t= this.state\n\n\t\tconst selected = this.get_selected_option()\n\t\tconst selected_label = this.get_selected_option_label()\n\n\t\tconst selected_text = selected ? selected_label : (placeholder || label)\n\n\t\tconst selected_style_classes =\n\t\t{\n\t\t\t'rrui__input-field'                : true,\n\t\t\t'rrui__select__selected'           : true,\n\t\t\t'rrui__select__selected--nothing'  : !selected_label,\n\t\t\t// CSS selector performance optimization\n\t\t\t'rrui__select__selected--expanded' : expanded,\n\t\t\t'rrui__select__selected--disabled' : disabled\n\t\t}\n\n\t\tif (autocomplete && expanded)\n\t\t{\n\t\t\t// style = { ...style, width: autocomplete_width + 'px' }\n\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={ ref => this.autocomplete = ref }\n\t\t\t\t\tplaceholder={ selected_text }\n\t\t\t\t\tvalue={ autocomplete_input_value }\n\t\t\t\t\tonChange={ this.on_autocomplete_input_change }\n\t\t\t\t\tonKeyDown={ this.on_key_down }\n\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\ttitle={ title }\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t(\n\t\t\t\t\t\tselected_style_classes,\n\t\t\t\t\t\t'rrui__select__selected--autocomplete',\n\t\t\t\t\t\tinputClassName\n\t\t\t\t\t) }/>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<button\n\t\t\t\tref={ ref => this.selected = ref }\n\t\t\t\ttype=\"button\"\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tonClick={ this.toggle }\n\t\t\t\tonKeyDown={ this.on_key_down }\n\t\t\t\tonFocus={ onFocus }\n\t\t\t\ttabIndex={ nativeExpanded ? -1 : tabIndex }\n\t\t\t\ttitle={ title }\n\t\t\t\tclassName={ classNames\n\t\t\t\t(\n\t\t\t\t\tselected_style_classes,\n\t\t\t\t\t{\n\t\t\t\t\t\t'rrui__input-field--invalid' : this.should_indicate_invalid()\n\t\t\t\t\t}\n\t\t\t\t) }>\n\n\t\t\t\t{/* http://stackoverflow.com/questions/35464067/flexbox-not-working-on-button-element-in-some-browsers */}\n\t\t\t\t<div className=\"rrui__select__selected-content\">\n\n\t\t\t\t\t{/* Selected option label (or icon) */}\n\t\t\t\t\t<div className=\"rrui__select__selected-label\">\n\t\t\t\t\t\t{ (concise && selected && selected.icon) ? React.cloneElement(selected.icon, { title: selected_label }) : selected_text }\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* An arrow */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ classNames('rrui__select__arrow',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// CSS selector performance optimization\n\t\t\t\t\t\t\t'rrui__select__arrow--expanded' : expanded,\n\t\t\t\t\t\t\t'rrui__select__arrow--disabled' : disabled\n\t\t\t\t\t\t}) }/>\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_toggler()\n\t{\n\t\tconst { toggler } = this.props\n\n\t\treturn (\n\t\t\t<div className=\"rrui__select__toggler\">\n\t\t\t\t{ React.cloneElement(toggler,\n\t\t\t\t{\n\t\t\t\t\tref       : ref => this.selected = ref,\n\t\t\t\t\tonClick   : this.toggle,\n\t\t\t\t\tonKeyDown : this.on_key_down\n\t\t\t\t}) }\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// supports disabled javascript\n\trender_static()\n\t{\n\t\tconst\n\t\t{\n\t\t\tid,\n\t\t\tname,\n\t\t\tvalue,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\toptions,\n\t\t\tmenu,\n\t\t\ttoggler,\n\t\t\tfallback,\n\t\t\tnative,\n\t\t\tnativeExpanded,\n\t\t\ttabIndex,\n\t\t\tchildren\n\t\t}\n\t\t= this.props\n\n\t\tif (menu)\n\t\t{\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classNames\n\t\t\t\t\t({\n\t\t\t\t\t\t'rrui__rich__fallback' : fallback\n\t\t\t\t\t}) }>\n\t\t\t\t\t{toggler}\n\t\t\t\t</div>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t}\n\n\t\tconst markup =\n\t\t(\n\t\t\t<select\n\t\t\t\tref={ ref => this.native = ref }\n\t\t\t\tid={ id }\n\t\t\t\tname={ name }\n\t\t\t\tvalue={ value_is_empty(value) ? Empty_value_option_value : value }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tonChange={ this.native_select_on_change }\n\t\t\t\ttabIndex={ (native || nativeExpanded) ? tabIndex : undefined }\n\t\t\t\tclassName={ classNames('rrui__input', 'rrui__select__native',\n\t\t\t\t{\n\t\t\t\t\t'rrui__select__native-expanded' : nativeExpanded,\n\t\t\t\t\t'rrui__rich__fallback'          : fallback\n\t\t\t\t}) }>\n\t\t\t\t{\n\t\t\t\t\toptions\n\t\t\t\t\t?\n\t\t\t\t\tthis.render_native_select_options(options, value_is_empty(value))\n\t\t\t\t\t:\n\t\t\t\t\tReact.Children.map(children, (child) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!child)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst markup =\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\tclassName=\"rrui__select__native-option\"\n\t\t\t\t\t\t\t\tkey={ child.props.value }\n\t\t\t\t\t\t\t\tvalue={ child.props.value }>\n\t\t\t\t\t\t\t\t{ child.props.label }\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\treturn markup\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</select>\n\t\t)\n\n\t\treturn markup\n\t}\n\n\trender_native_select_options(options, empty_option_is_selected)\n\t{\n\t\tconst { placeholder } = this.props\n\n\t\tlet empty_option_present = false\n\n\t\tconst rendered_options = options.map((option) =>\n\t\t{\n\t\t\tlet { value, label } = option\n\n\t\t\tif (value_is_empty(value))\n\t\t\t{\n\t\t\t\tempty_option_present = true\n\t\t\t\tvalue = Empty_value_option_value\n\t\t\t}\n\n\t\t\tconst markup =\n\t\t\t(\n\t\t\t\t<option\n\t\t\t\t\tclassName=\"rrui__select__native-option\"\n\t\t\t\t\tkey={ get_option_key(value) }\n\t\t\t\t\tvalue={ value }>\n\t\t\t\t\t{ label }\n\t\t\t\t</option>\n\t\t\t)\n\n\t\t\treturn markup\n\t\t})\n\n\t\tif (empty_option_is_selected && !empty_option_present)\n\t\t{\n\t\t\trendered_options.unshift\n\t\t\t(\n\t\t\t\t<option\n\t\t\t\t\tclassName=\"rrui__select__native-option\"\n\t\t\t\t\tkey={ get_option_key(undefined) }\n\t\t\t\t\tvalue=\"\">\n\t\t\t\t\t{ placeholder }\n\t\t\t\t</option>\n\t\t\t)\n\t\t}\n\n\t\treturn rendered_options\n\t}\n\n\t// Whether should indicate that the input value is invalid\n\tshould_indicate_invalid()\n\t{\n\t\tconst { indicateInvalid, error } = this.props\n\n\t\treturn indicateInvalid && error\n\t}\n\n\tnative_select_on_change = (event) =>\n\t{\n\t\tconst { onChange } = this.props\n\n\t\tlet value = event.target.value\n\n\t\t// Convert back from an empty string to `undefined`\n\t\tif (value === Empty_value_option_value)\n\t\t{\n\t\t\t// `null` is not accounted for, use `undefined` instead.\n\t\t\tvalue = undefined\n\t\t}\n\n\t\tonChange(value)\n\t}\n\n\tresize_native_expanded_select = () =>\n\t{\n\t\t// For some strange reason 1px on the right side of the `<select/>`\n\t\t// still falls through to the underlying selected option label.\n\t\tReactDOM.findDOMNode(this.native).style.width = (ReactDOM.findDOMNode(this.selected).offsetWidth + 1) + 'px'\n\t}\n\n\tget_selected_option()\n\t{\n\t\tconst { value } = this.props\n\n\t\treturn this.get_option(value)\n\t}\n\n\tget_option(value)\n\t{\n\t\tconst { options, children } = this.props\n\n\t\tif (options)\n\t\t{\n\t\t\treturn options.filter(x => x.value === value)[0]\n\t\t}\n\n\t\tlet option\n\n\t\tReact.Children.forEach(children, function(child)\n\t\t{\n\t\t\tif (child.props.value === value)\n\t\t\t{\n\t\t\t\toption = child\n\t\t\t}\n\t\t})\n\n\t\treturn option\n\t}\n\n\tget_option_index(option)\n\t{\n\t\tconst { options, children } = this.props\n\n\t\tif (options)\n\t\t{\n\t\t\treturn options.indexOf(option)\n\t\t}\n\n\t\tlet option_index\n\n\t\tReact.Children.forEach(children, function(child, index)\n\t\t{\n\t\t\tif (child.props.value === option.value)\n\t\t\t{\n\t\t\t\toption_index = index\n\t\t\t}\n\t\t})\n\n\t\treturn option_index\n\t}\n\n\tget_selected_option_label()\n\t{\n\t\tconst { options } = this.props\n\n\t\tconst selected = this.get_selected_option()\n\n\t\tif (!selected)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (options)\n\t\t{\n\t\t\treturn selected.label\n\t\t}\n\n\t\treturn selected.props.label\n\t}\n\n\toverflown()\n\t{\n\t\tconst { options, maxItems } = this.props\n\n\t\treturn options.length > maxItems\n\t}\n\n\tscrollable_list_height(state = this.state)\n\t{\n\t\tconst { maxItems } = this.props\n\n\t\t// (Adding vertical padding so that it shows these `maxItems` options fully)\n\t\treturn (state.height - 2 * state.vertical_padding) * (maxItems / this.get_options().length) + state.vertical_padding\n\t}\n\n\tshould_animate()\n\t{\n\t\treturn true\n\n\t\t// return this.props.options.length >= this.props.transition_item_count_min\n\t}\n\n\tfocus()\n\t{\n\t\tif (this.autocomplete)\n\t\t{\n\t\t\tthis.autocomplete.focus()\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selected.focus()\n\t\t}\n\t}\n\n\ttoggle = (event, toggle_options = {}) =>\n\t{\n\t\tif (event)\n\t\t{\n\t\t\t// Don't navigate away when clicking links\n\t\t\tevent.preventDefault()\n\n\t\t\t// Not discarding the click event because\n\t\t\t// other expanded selects may be listening to it.\n\t\t\t// // Discard the click event so that it won't reach `document` click listener\n\t\t\t// event.stopPropagation() // doesn't work\n\t\t\t// event.nativeEvent.stopImmediatePropagation()\n\t\t}\n\n\t\tconst\n\t\t{\n\t\t\ttoggler,\n\t\t\tdisabled,\n\t\t\tautocomplete,\n\t\t\toptions,\n\t\t\tvalue,\n\t\t\tfocusUponSelection,\n\t\t\tonToggle,\n\t\t\tnativeExpanded,\n\t\t\tscrollIntoView,\n\t\t\texpandAnimationDuration\n\t\t}\n\t\t= this.props\n\n\t\tif (nativeExpanded)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (disabled)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tif (this.toggle_timeout)\n\t\t{\n\t\t\tclearTimeout(this.toggle_timeout)\n\t\t\tthis.toggle_timeout = undefined\n\t\t}\n\n\t\tif (this.scroll_into_view_timeout)\n\t\t{\n\t\t\tclearTimeout(this.scroll_into_view_timeout)\n\t\t\tthis.scroll_into_view_timeout = undefined\n\t\t}\n\n\t\tconst { expanded } = this.state\n\n\t\tif (!expanded && autocomplete)\n\t\t{\n\t\t\tthis.setState\n\t\t\t({\n\t\t\t\t// The input value can't be `undefined`\n\t\t\t\t// because in that case React would complain\n\t\t\t\t// about it being an \"uncontrolled input\"\n\t\t\t\tautocomplete_input_value : '',\n\t\t\t\tmatching_options         : options\n\t\t\t})\n\n\t\t\t// if (!this.state.autocomplete_width)\n\t\t\t// {\n\t\t\t// \tthis.setState({ autocomplete_width: this.get_widest_label_width() })\n\t\t\t// }\n\t\t}\n\n\t\t// Deferring expanding the select upon click\n\t\t// because `document.onClick(event)` should fire first,\n\t\t// otherwise `event.target` in that handler will be detached\n\t\t// from the document and so `this.document_clicked()` handler will\n\t\t// immediately toggle the select back to collapsed state.\n\t\tthis.toggle_timeout = setTimeout(() =>\n\t\t{\n\t\t\tthis.toggle_timeout = undefined\n\n\t\t\tthis.setState\n\t\t\t({\n\t\t\t\texpanded: !expanded\n\t\t\t},\n\t\t\t() =>\n\t\t\t{\n\t\t\t\tconst is_now_expanded = this.state.expanded\n\n\t\t\t\tif (!toggle_options.dont_focus_after_toggle)\n\t\t\t\t{\n\t\t\t\t\t// If it's autocomplete, then focus <input/> field\n\t\t\t\t\t// upon toggling the select component.\n\t\t\t\t\tif (autocomplete)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (is_now_expanded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Focus the input after the select is expanded\n\t\t\t\t\t\t\tthis.autocomplete.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (focusUponSelection)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Focus the toggler after the select is collapsed\n\t\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// For some reason Firefox loses focus\n\t\t\t\t\t\t// upon select expansion via a click,\n\t\t\t\t\t\t// so this extra `.focus()` works around that issue.\n\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.scroll_into_view_timeout = setTimeout(() =>\n\t\t\t\t{\n\t\t\t\t\tthis.scroll_into_view_timeout = undefined\n\n\t\t\t\t\tconst is_still_expanded = this.state.expanded\n\n\t\t\t\t\tif (is_still_expanded && this.list && scrollIntoView)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst element = ReactDOM.findDOMNode(this.list)\n\n\t\t\t\t\t\t// https://developer.mozilla.org/ru/docs/Web/API/Element/scrollIntoViewIfNeeded\n\t\t\t\t\t\tif (element.scrollIntoViewIfNeeded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\telement.scrollIntoViewIfNeeded(false)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// https://github.com/stipsan/scroll-into-view-if-needed\n\t\t\t\t\t\t\tscrollIntoViewIfNeeded(element, false, { duration: 800 })\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\texpandAnimationDuration * 1.1)\n\t\t\t})\n\n\t\t\tif (!expanded && options)\n\t\t\t{\n\t\t\t\t// Focus either the selected option\n\t\t\t\t// or the first option in the list.\n\n\t\t\t\tconst focused_option_value = value || options[0].value\n\n\t\t\t\tthis.setState({ focused_option_value })\n\n\t\t\t\t// Scroll down to the focused option\n\t\t\t\tthis.scroll_to(focused_option_value)\n\t\t\t}\n\n\t\t\tif (onToggle)\n\t\t\t{\n\t\t\t\tonToggle(!expanded)\n\t\t\t}\n\n\t\t\tif (toggle_options.callback)\n\t\t\t{\n\t\t\t\ttoggle_options.callback()\n\t\t\t}\n\t\t},\n\t\t0)\n\t}\n\n\titem_clicked = (value, event) =>\n\t{\n\t\tif (event)\n\t\t{\n\t\t\tevent.preventDefault()\n\t\t}\n\n\t\tconst { onChange } = this.props\n\n\t\tthis.toggle(undefined, { callback: () => onChange(value) })\n\t}\n\n\tdocument_clicked = (event) =>\n\t{\n\t\tconst autocomplete = ReactDOM.findDOMNode(this.autocomplete)\n\t\tconst selected_option = ReactDOM.findDOMNode(this.selected)\n\t\tconst options_list = ReactDOM.findDOMNode(this.list)\n\n\t\t// Don't close the select if its expander button has been clicked,\n\t\t// or if autocomplete has been clicked,\n\t\t// or if an option was selected from the list.\n\t\tif (options_list && options_list.contains(event.target)\n\t\t\t|| (autocomplete && autocomplete.contains(event.target))\n\t\t\t|| (selected_option && selected_option.contains(event.target)))\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tthis.setState({ expanded: false })\n\n\t\tconst { onToggle } = this.props\n\n\t\tif (onToggle)\n\t\t{\n\t\t\tonToggle(false)\n\t\t}\n\t}\n\n\t// Would have used `onBlur={...}` event handler here\n\t// with `if (container.contains(event.relatedTarget))` condition,\n\t// but it doesn't work in IE in React.\n\t// https://github.com/facebook/react/issues/3751\n\t//\n\t// Therefore, using the hacky `document.onClick` handlers\n\t// and this `onKeyDown` Tab handler\n\t// until `event.relatedTarget` support is consistent in React.\n\t//\n\ton_key_down_in_container = (event) =>\n\t{\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { expanded } = this.state\n\n\t\tswitch (event.keyCode)\n\t\t{\n\t\t\t// Toggle on Tab out\n\t\t\tcase 9:\n\t\t\t\tif (expanded)\n\t\t\t\t{\n\t\t\t\t\tthis.toggle(undefined, { dont_focus_after_toggle: true })\n\n\t\t\t\t\tconst { onTabOut } = this.props\n\n\t\t\t\t\tif (onTabOut)\n\t\t\t\t\t{\n\t\t\t\t\t\tonTabOut(event)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn\n\t\t}\n\t}\n\n\ton_key_down = (event) =>\n\t{\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tconst { options, value, autocomplete } = this.props\n\t\tconst { expanded, focused_option_value } = this.state\n\n\t\t// Maybe add support for `children` arrow navigation in future\n\t\tif (options)\n\t\t{\n\t\t\tswitch (event.keyCode)\n\t\t\t{\n\t\t\t\t// Select the previous option (if present) on up arrow\n\t\t\t\tcase 38:\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\tconst previous = this.previous_focusable_option()\n\n\t\t\t\t\tif (previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.show_option(previous.value, 'top')\n\t\t\t\t\t\treturn this.setState({ focused_option_value: previous.value })\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// Select the next option (if present) on down arrow\n\t\t\t\tcase 40:\n\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\tconst next = this.next_focusable_option()\n\n\t\t\t\t\tif (next)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.show_option(next.value, 'bottom')\n\t\t\t\t\t\treturn this.setState({ focused_option_value: next.value })\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// Collapse on Escape\n\t\t\t\t//\n\t\t\t\t// Maybe add this kind of support for \"Escape\" key in some future:\n\t\t\t\t//  hiding the item list, cancelling current item selection process\n\t\t\t\t//  and restoring the selection present before the item list was toggled.\n\t\t\t\t//\n\t\t\t\tcase 27:\n\t\t\t\t\t// Collapse the list if it's expanded\n\t\t\t\t\tif (this.state.expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.toggle()\n\n\t\t\t\t\t\t// Restore focus when the list is collapsed\n\t\t\t\t\t\tthis.restore_focus_on_collapse_timeout = setTimeout(() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.restore_focus_on_collapse_timeout = undefined\n\n\t\t\t\t\t\t\tthis.selected.focus()\n\t\t\t\t\t\t},\n\t\t\t\t\t\t0)\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// on Enter\n\t\t\t\tcase 13:\n\t\t\t\t\t// Choose the focused item on Enter\n\t\t\t\t\tif (expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\t\t// If an item is focused\n\t\t\t\t\t\t// (which may not be a case\n\t\t\t\t\t\t//  when autocomplete is matching no items)\n\t\t\t\t\t\t// (still for non-autocomplete select\n\t\t\t\t\t\t//  it is valid to have a default option)\n\t\t\t\t\t\tif (this.get_options() && this.get_options().length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Choose the focused item\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Else it should have just submitted the form on Enter,\n\t\t\t\t\t// but it wouldn't because the select element activator is a <button/>\n\t\t\t\t\t// therefore hitting Enter while being focused on it just pushes that button.\n\t\t\t\t\t// So submit the enclosing form manually.\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (submit_parent_form(ReactDOM.findDOMNode(this.select)))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn\n\n\t\t\t\t// on Spacebar\n\t\t\t\tcase 32:\n\t\t\t\t\t// Choose the focused item on Enter\n\t\t\t\t\tif (expanded)\n\t\t\t\t\t{\n\t\t\t\t\t\t// only if it it's an `options` select\n\t\t\t\t\t\t// and also if it's not an autocomplete\n\t\t\t\t\t\tif (this.get_options() && !autocomplete)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tevent.preventDefault()\n\n\t\t\t\t\t\t\t// `focused_option_value` could be non-existent\n\t\t\t\t\t\t\t// in case of `autocomplete`, but since\n\t\t\t\t\t\t\t// we're explicitly not handling autocomplete here\n\t\t\t\t\t\t\t// it is valid to select any options including the default ones.\n\t\t\t\t\t\t\tthis.item_clicked(focused_option_value)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Otherwise, the spacebar keydown event on a `<button/>`\n\t\t\t\t\t// will trigger `onClick` and `.toggle()` will be called.\n\n\t\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n\n\t// This handler is a workaround for `redux-form`\n\ton_blur = (event) =>\n\t{\n\t\tconst { onBlur, value } = this.props\n\n\t\t// If clicked on a select option then don't trigger \"blur\" event\n\t\tif (event.relatedTarget && event.currentTarget.contains(event.relatedTarget))\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\t// This `onBlur` interceptor is a workaround for `redux-form`,\n\t\t// so that it gets the right (parsed, not the formatted one)\n\t\t// `event.target.value` in its `onBlur` handler.\n\t\tif (onBlur)\n\t\t{\n\t\t\tconst _event =\n\t\t\t{\n\t\t\t\t...event,\n\t\t\t\ttarget:\n\t\t\t\t{\n\t\t\t\t\t...event.target,\n\t\t\t\t\tvalue\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `redux-form` event detection.\n\t\t\t// https://github.com/erikras/redux-form/blob/v5/src/events/isEvent.js\n\t\t\t_event.stopPropagation = event.stopPropagation\n\t\t\t_event.preventDefault  = event.preventDefault\n\n\t\t\tonBlur(_event)\n\t\t}\n\t}\n\n\tget_options()\n\t{\n\t\tconst { autocomplete, autocompleteShowAll, maxItems, options } = this.props\n\t\tconst { matching_options } = this.state\n\n\t\tif (!autocomplete)\n\t\t{\n\t\t\treturn options\n\t\t}\n\n\t\tif (autocompleteShowAll)\n\t\t{\n\t\t\treturn matching_options\n\t\t}\n\n\t\treturn matching_options.slice(0, maxItems)\n\t}\n\n\t// Get the previous option (relative to the currently focused option)\n\tprevious_focusable_option()\n\t{\n\t\tconst options = this.get_options()\n\t\tconst { focused_option_value } = this.state\n\n\t\tlet i = 0\n\t\twhile (i < options.length)\n\t\t{\n\t\t\tif (options[i].value === focused_option_value)\n\t\t\t{\n\t\t\t\tif (i - 1 >= 0)\n\t\t\t\t{\n\t\t\t\t\treturn options[i - 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t}\n\n\t// Get the next option (relative to the currently focused option)\n\tnext_focusable_option()\n\t{\n\t\tconst options = this.get_options()\n\t\tconst { focused_option_value } = this.state\n\n\t\tlet i = 0\n\t\twhile (i < options.length)\n\t\t{\n\t\t\tif (options[i].value === focused_option_value)\n\t\t\t{\n\t\t\t\tif (i + 1 < options.length)\n\t\t\t\t{\n\t\t\t\t\treturn options[i + 1]\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++\n\t\t}\n\t}\n\n\t// Scrolls to an option having the value\n\tscroll_to(value)\n\t{\n\t\tconst { vertical_padding } = this.state\n\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[get_option_key(value)])\n\t\tconst list = ReactDOM.findDOMNode(this.list)\n\n\t\t// If this option isn't even shown\n\t\t// (e.g. autocomplete)\n\t\t// then don't scroll to it because there's nothing to scroll to.\n\t\tif (!option_element)\n\t\t{\n\t\t\treturn\n\t\t}\n\n\t\tlet offset_top = option_element.offsetTop\n\n\t\tconst is_first_option = list.firstChild === option_element\n\n\t\t// If it's the first one - then scroll to list top\n\t\tif (is_first_option)\n\t\t{\n\t\t\toffset_top -= vertical_padding\n\t\t}\n\n\t\tlist.scrollTop = offset_top\n\t}\n\n\t// Fully shows an option having the `value` (scrolls to it if neccessary)\n\tshow_option(value, gravity)\n\t{\n\t\tconst { vertical_padding } = this.state\n\n\t\tconst option_element = ReactDOM.findDOMNode(this.options[get_option_key(value)])\n\t\tconst list = ReactDOM.findDOMNode(this.list)\n\n\t\tconst is_first_option = list.firstChild === option_element\n\t\tconst is_last_option  = list.lastChild === option_element\n\n\t\tswitch (gravity)\n\t\t{\n\t\t\tcase 'top':\n\t\t\t\tlet top_line = option_element.offsetTop\n\n\t\t\t\tif (is_first_option)\n\t\t\t\t{\n\t\t\t\t\ttop_line -= vertical_padding\n\t\t\t\t}\n\n\t\t\t\tif (top_line < list.scrollTop)\n\t\t\t\t{\n\t\t\t\t\tlist.scrollTop = top_line\n\t\t\t\t}\n\n\t\t\t\treturn\n\n\t\t\tcase 'bottom':\n\t\t\t\tlet bottom_line = option_element.offsetTop + option_element.offsetHeight\n\n\t\t\t\tif (is_last_option)\n\t\t\t\t{\n\t\t\t\t\tbottom_line += vertical_padding\n\t\t\t\t}\n\n\t\t\t\tif (bottom_line > list.scrollTop + list.offsetHeight)\n\t\t\t\t{\n\t\t\t\t\tlist.scrollTop = bottom_line - list.offsetHeight\n\t\t\t\t}\n\n\t\t\t\treturn\n\t\t}\n\t}\n\n\t// Calculates height of the expanded item list\n\tcalculate_height()\n\t{\n\t\tconst { options } = this.props\n\n\t\tconst list_dom_node = ReactDOM.findDOMNode(this.list)\n\t\tconst border = parseInt(window.getComputedStyle(list_dom_node).borderTopWidth)\n\t\tconst height = list_dom_node.scrollHeight\n\n\t\tconst vertical_padding = parseInt(window.getComputedStyle(list_dom_node).paddingTop)\n\n\t\t// For things like \"accordeon\".\n\t\t//\n\t\t// const images = list_dom_node.querySelectorAll('img')\n\t\t//\n\t\t// if (images.length > 0)\n\t\t// {\n\t\t// \treturn this.preload_images(list_dom_node, images)\n\t\t// }\n\n\t\tconst state = { height, vertical_padding, border }\n\n\t\tif (this.is_scrollable() && options && this.overflown())\n\t\t{\n\t\t\tstate.list_height = this.scrollable_list_height(state)\n\t\t}\n\n\t\tthis.setState(state)\n\t}\n\n\tis_scrollable()\n\t{\n\t\tconst { menu, autocomplete, autocompleteShowAll, scroll } = this.props\n\n\t\treturn !menu && (autocomplete && autocompleteShowAll || !autocomplete) && scroll\n\t}\n\n\t// This turned out not to work for `autocomplete`\n\t// because not all options are ever shown.\n\t// get_widest_label_width()\n\t// {\n\t// \t// <ul/> -> <li/> -> <button/>\n\t// \tconst label = ReactDOM.findDOMNode(this.list).firstChild.firstChild\n\t//\n\t// \tconst style = getComputedStyle(label)\n\t//\n\t// \tconst width = parseFloat(style.width)\n\t// \tconst side_padding = parseFloat(style.paddingLeft)\n\t//\n\t// \treturn width - 2 * side_padding\n\t// }\n\n\tget_matching_options(options, value)\n\t{\n\t\t// If the autocomplete value is `undefined` or empty\n\t\tif (!value)\n\t\t{\n\t\t\treturn options\n\t\t}\n\n\t\tvalue = value.toLowerCase()\n\n\t\treturn options.filter(({ label, verbose }) =>\n\t\t{\n\t\t\treturn (verbose || label).toLowerCase().indexOf(value) >= 0\n\t\t})\n\t}\n\n\ton_autocomplete_input_change = (event) =>\n\t{\n\t\tconst { options } = this.props\n\t\tconst input = event.target.value\n\t\tconst matching_options = this.get_matching_options(options, input)\n\n\t\tthis.setState\n\t\t({\n\t\t\tautocomplete_input_value: input,\n\t\t\tmatching_options,\n\t\t\tfocused_option_value: matching_options.length > 0 ? matching_options[0].value : undefined\n\t\t})\n\t}\n\n\t// // https://github.com/daviferreira/react-sanfona/blob/master/src/AccordionItem/index.jsx#L54\n\t// // Wait for images to load before calculating maxHeight\n\t// preload_images(node, images)\n\t// {\n\t// \tlet images_loaded = 0\n\t//\n\t// \tconst image_loaded = () =>\n\t// \t{\n\t// \t\timages_loaded++\n\t//\n\t// \t\tif (images_loaded === images.length)\n\t// \t\t{\n\t// \t\t\tthis.setState\n\t// \t\t\t({\n\t// \t\t\t\theight: this.props.expanded ? node.scrollHeight : 0\n\t// \t\t\t})\n\t// \t\t}\n\t// \t}\n\t//\n\t// \tfor (let i = 0; i < images.length; i += 1)\n\t// \t{\n\t// \t\tconst image = new Image()\n\t// \t\timage.src = images[i].src\n\t// \t\timage.onload = image.onerror = image_loaded\n\t// \t}\n\t// }\n}\n\nSelect.Separator = function(props)\n{\n\treturn <div className=\"rrui__select__separator\"/>\n}\n\nconst native_expanded_select_container_style =\n{\n\tdisplay : 'inline-block'\n}\n\n// There can be an `undefined` value,\n// so just `{ value }` won't do here.\nfunction get_option_key(value)\n{\n\treturn value_is_empty(value) ? '@@rrui/select/undefined' : value\n}\n\nfunction value_is_empty(value)\n{\n\treturn value === null || value === undefined\n}"]}